
                            < M A T L A B (R) >
                  Copyright 1984-2017 The MathWorks, Inc.
                   R2017a (9.2.0.556344) 64-bit (glnxa64)
                               March 27, 2017

 
For online documentation, see http://www.mathworks.com/support
For product information, visit www.mathworks.com.
 
--------------------- BEGIN FILE multilinear_analysis.m-------------------
% multilinear regression analysis 
% try to decode |RU| or TU from multivariate ROI activity and see if it predicts
% choices better than behavioral model alone
% merge of residuals_analysis.m and badre_2012_multilinear_analysis.m TODO dedupe?
%

function multilinear_analysis(glmodel, regressor, contrast, method, get_null, load_first_half)

printcode;

null_iters = 100;

if ~exist('get_null', 'var')
    get_null = false;
end

if ~exist('load_first_half', 'var')
    load_first_half = false;
end

filename = ['multilinear_analysis_', regressor, '_', replace(contrast, ' ', '_'), '_glm', num2str(glmodel), '_', method, '.mat'];
filename


if load_first_half
    % optionally load pre-computed betas to speed things up
    load(filename);
else

    EXPT = exploration_expt();

    data = load_data;

    % special case a priori ROIs; otherwise expect a glm & contrast
    switch glmodel
        case 'badre'
            % clusters = masks from paper
            masks = badre_2012_create_masks(false);
            %masks = masks(1); % TODO all masks
            region = masks';

            % extract trial_onset (raw, unsmoothed) betas
            roi = extract_roi_betas(masks, 'trial_onset');

        case 'tommy'

        otherwise

            % group-level settings
            p = 0.001;
            alpha = 0.05;
            Dis = 20;
            Num = 1; % # peak voxels per cluster; default in bspmview is 3
            direct = '+';

            [V, Y, C, CI, region, extent, stat, mni, cor, results_table] = ccnl_extract_clusters(EXPT, glmodel, contrast, p, direct, alpha, Dis, Num);

            r = 10 / 1.5; % 10 mm radius

            % create spherical masks around peak voxel of each cluster (intersected with cluster)
            %
            for c = 1:length(region)
                masks{c} = sprintf('sphere_glm%d_%s_%d_%d_%d_r=%dmm.nii', glmodel, replace(contrast, ' ', '_'), mni(c,1), mni(c,2), mni(c,3), round(r * 1.5));
                cmask = CI == CI(cor(c,1), cor(c,2), cor(c,3));
                ccnl_create_spherical_mask(cor(c,1), cor(c,2), cor(c,3), r, masks{c}, cmask);
            end

            % extract trial_onset (raw, unsmoothed) betas
            %
            roi = extract_roi_betas(masks, 'trial_onset');
    end

    save(filename, '-v7.3');
end

% define behavioral / hybrid GLM formulas
switch regressor
    case 'RU'
        formula_both = 'C ~ -1 + V + RU + VTU + decRU';
        formula_orig = 'C ~ -1 + V + RU + VTU';
        formula_dec = 'C ~ -1 + V + decRU + VTU';
    case 'TU'
        formula_both = 'C ~ -1 + V + RU + VTU + VdecTU';
        formula_orig = 'C ~ -1 + V + RU + VTU';
        formula_dec = 'C ~ -1 + V + RU + VdecTU';
    otherwise
        assert(false);
end

[~,~,goodRuns] = exploration_getSubjectsDirsAndRuns();

% clean up betas
%
for c = 1:length(roi)
    for s = 1:length(data)
        B = roi(c).subj(s).betas;
        runs = find(goodRuns{s});
        data(s).exclude = ~ismember(data(s).run, runs) | data(s).timeout; % exclude bad runs and timeout trials
        which_nan = any(isnan(B(~data(s).exclude, :)), 1); % exclude nan voxels (ignoring bad runs and timeouts; we exclude those in the GLMs)
        B(:, which_nan) = [];
        data(s).betas{c} = B;
    end
end

% extract regressors
%
V_all = [];
for s = 1:length(data)
    which_all = logical(ones(length(data(s).run), 1));
    switch regressor
        case 'RU'
            [~, absRU] =  get_latents(data, s, which_all, 'abs');
            [~, RU] = get_latents(data, s, which_all, 'left');
            data(s).y = absRU;
            data(s).RU = RU; % for sign-correction
        case 'TU'
            [V, ~, TU] = get_latents(data, s, which_all, 'left');
            data(s).y = TU;
            V_all = [V_all; V];
        otherwise
            assert(false);
    end
end

save(filename, '-v7.3');

rng default; % for reproducibility

% run analysis
%
for c = 1:numel(masks)
    mask = masks{c};
    [~, masknames{c}, ~] = fileparts(mask);
    disp(region{c});

    dec = [];
    exclude = [];
    mse = [];
    for s = 1:length(data)
        exclude = [exclude; data(s).exclude];
        X = data(s).betas{c};
        y = data(s).y;

        % remove bad data points
        X = X(~data(s).exclude, :);
        y = y(~data(s).exclude);

        % predict using full data set; we ignore bad trials later 
        % also for CV, one run per fold
        %X = X(randperm(size(X, 1)), :); % TODO REMOVE ME
        [pred, mse(s)] = multilinear_fit(X, y, data(s).betas{c}, method, data(s).run(~data(s).exclude));
        data(s).mse{c} = mse(s);

        if strcmp(regressor, 'RU')
            pred = pred .* (data(s).RU >= 0) + (-pred) .* (data(s).RU < 0); % adjust for fact that we decode |RU|
        end
        dec = [dec; pred];

        % optionally generate null distribution
        if get_null
            null_mse = [];
            for i = 1:null_iters
                y = y(randperm(length(y)));
                [~, m] = multilinear_fit(X, y, data(s).betas{c}, method, data(s).run(~data(s).exclude));
                null_mse = [null_mse, m];
            end
            data(s).null_mse{c} = null_mse;

            % calculate p-value based on null distribution
            null_mse = [null_mse mse(s)];
            null_mse = sort(null_mse);
            idx = find(null_mse == mse(s));
            p = idx / length(null_mse);
            fprintf('                    subj %d null mse p = %.4f\n', s, p);
            data(s).null_p{c} = p;
        end
    end
    exclude = logical(exclude);

    tbl = data2table(data, 0, 0); % include all trials; we exclude bad runs and timeouts manually

    switch regressor
        case 'RU'
            decRU = dec;
            tbl = [tbl table(decRU)];
        case 'TU'
            VdecTU = V_all ./ dec;
            tbl = [tbl table(VdecTU)];
        otherwise
            assert(false);
    end

    % glm with both the model and decoded regressor
    results_both{c} = fitglme(tbl,formula_both,'Distribution','Binomial','Link','Probit','FitMethod','Laplace', 'CovariancePattern','diagonal', 'Exclude',exclude);
    [w, names, stats] = fixedEffects(results_both{c});
    ps(c,:) = stats.pValue';
    results_both{c}
    stats.pValue
    w
    names

    % original glm (model only)
    % do model comparison
    results_orig{c} = fitglme(tbl,formula_orig,'Distribution','Binomial','Link','Probit','FitMethod','Laplace', 'CovariancePattern','diagonal', 'Exclude',exclude);
    comp{c} = compare(results_orig{c}, results_both{c}); % order is important -- see docs
    comp{c}
    p_comp(c,:) = comp{c}.pValue(2);
    BIC(c,:) = comp{c}.BIC';

    % glm with decoded regressor only
    % do second model comparison
    results_dec{c} = fitglme(tbl,formula_dec,'Distribution','Binomial','Link','Probit','FitMethod','Laplace', 'CovariancePattern','diagonal', 'Exclude',exclude);
    comp2{c} = compare(results_dec{c}, results_both{c}); % order is important -- see docs
    comp2{c}
    p_comp2(c,:) = comp2{c}.pValue(2);
    BIC2(c,:) = comp2{c}.BIC';

    % correlate RMSE with behavioral weights across subjects
    % => see if better decodeability is associated with more reliance on regressor in decision
    %
    load results_glme_fig3_nozscore.mat;
    w = getEffects(results_VTURU, false);
    switch regressor
        case 'RU'
            [r, p] = corr(abs(w(:,2)), mse');
        case 'TU'
            [r, p] = corr(abs(w(:,3)), mse');
        otherwise
            assert(false);
    end
    disp('mse to w');
    r
    p
    p_ax(c,:) = p;
    r_ax(c,:) = r;
end

save(filename, '-v7.3');

p_uncorr = ps(:,4);
p_corr = 1 - (1 - p_uncorr) .^ numel(p_uncorr);
BIC_orig = BIC(:,1);
BIC_both = BIC(:,2);
BIC_dec = BIC2(:,1);
table(region, p_uncorr, p_corr, BIC_orig, BIC_both, p_comp, BIC_dec, p_comp2, p_ax, r_ax)


--------------------- END FILE multilinear_analysis.m-------------------

filename =

    'multilinear_analysis_RU_RU_-_TU_glm21_ridge_CV.mat'

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180725_UEP_001/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180727_UEP_002/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180727_UEP_003/preproc'
    structural: 'struct.nii'
    functional: {1×6 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180730_UEP_004/preproc'
    structural: 'struct.nii'
    functional: {1×6 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180730_UEP_005/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180801_UEP_006/preproc'
    structural: 'struct.nii'
    functional: {1×7 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180802_UEP_007/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180803_UEP_008/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180803_UEP_009/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP010/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_011/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_012/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_013/preproc'
    structural: 'struct.nii'
    functional: {1×7 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_014/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_015/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_016/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_017/preproc'
    structural: 'struct.nii'
    functional: {1×7 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_018_2/preproc'
    structural: 'struct.nii'
    functional: {1×7 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_019/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_020/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_021/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180806_UEP_022/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180806_UEP_023/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180807_UEP_024/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180807_UEP_025/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180807_UEP_026/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180808_UEP_027/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180808_UEP_028/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180808_UEP_029/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180809_UEP_030/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180809_UEP_031/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

bspm_extract_clusters(/ncf/gershman/Lab/Exploration/glmOutput/model21/con3/spmT_0001.nii, 0.001000, +, 0.050000, 20, 1, 30, /ncf/gershman/Lab/scripts/ccnl-fmri-2018/atlases, AAL2)
  Columns 1 through 6

    'Positive'    'Frontal_Mid_2_R'        [260]    [4.8045]    [42]    [44]
            []    'Frontal_Sup_Medi...'    [336]    [4.6057]    [-6]    [62]

  Column 7

    [-8]
    [22]

  betas_filename = betas_mask_subj=1_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=2_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=3_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=4_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=5_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=6_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=7_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=8_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=9_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=10_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=11_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=12_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=13_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=14_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=15_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=16_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=17_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=18_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=19_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=20_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=21_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=22_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=23_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=24_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=25_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=26_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=27_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=28_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=29_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=30_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
  betas_filename = betas_mask_subj=31_trial_onset.mat
    mask sphere_glm21_RU_-_TU_42_44_-8_r=10mm.nii: 235 voxels
    mask sphere_glm21_RU_-_TU_-6_62_22_r=10mm.nii: 204 voxels
Frontal_Mid_2_R
[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In multilinear_analysis (line 194)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + decRU

Model fit statistics:
    AIC       BIC       LogLikelihood    Deviance
    7488.2    7516.8    -3740.1          7480.2  

Fixed effects coefficients (95% CIs):
    Name           Estimate      SE            tStat      DF      pValue    
    'RU'              0.10228     0.0058442     17.501    9475             0
    'VTU'          0.00011739    2.4875e-05     4.7191    9475    2.4025e-06
    'V'               0.11864     0.0024772     47.894    9475             0
    'decRU'          -0.03555     0.0087771    -4.0503    9475    5.1555e-05


    Lower         Upper     
      0.090822       0.11373
    6.8629e-05    0.00016615
       0.11379        0.1235
     -0.052755     -0.018345

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

   1.0e-04 *

         0
    0.0240
         0
    0.5155


w =

    0.1023
    0.0001
    0.1186
   -0.0356


names =

  4×1 table

     Name  
    _______

    'RU'   
    'VTU'  
    'V'    
    'decRU'

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In multilinear_analysis (line 204)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7502.5      7524    -3748.3                     
    ALTGLME    4     7488.2    7516.8    -3740.1    16.389    1      


    pValue    
              
    5.1573e-05

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In multilinear_analysis (line 212)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF    pValue
    GLME       3     7807.2    7828.7    -3900.6                               
    ALTGLME    4     7488.2    7516.8    -3740.1    321.09    1          0     

mse to w

r =

   -0.6479


p =

   8.1314e-05

Frontal_Sup_Medial_L
[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In multilinear_analysis (line 194)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + decRU

Model fit statistics:
    AIC     BIC       LogLikelihood    Deviance
    7485    7513.7    -3738.5          7477    

Fixed effects coefficients (95% CIs):
    Name           Estimate      SE            tStat      DF      pValue    
    'RU'              0.10371     0.0058516     17.723    9475             0
    'VTU'          0.00011545    2.4859e-05     4.6441    9475    3.4624e-06
    'V'               0.11864     0.0024767     47.901    9475             0
    'decRU'         -0.038793     0.0087801    -4.4183    9475     1.006e-05


    Lower         Upper     
      0.092241       0.11518
    6.6719e-05    0.00016418
       0.11378       0.12349
     -0.056004     -0.021582

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

   1.0e-04 *

         0
    0.0346
         0
    0.1006


w =

    0.1037
    0.0001
    0.1186
   -0.0388


names =

  4×1 table

     Name  
    _______

    'RU'   
    'VTU'  
    'V'    
    'decRU'

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In multilinear_analysis (line 204)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7502.5      7524    -3748.3                     
    ALTGLME    4       7485    7513.7    -3738.5    19.504    1      


    pValue    
              
    1.0039e-05

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In multilinear_analysis (line 212)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF    pValue
    GLME       3     7812.4    7833.9    -3903.2                               
    ALTGLME    4       7485    7513.7    -3738.5    329.41    1          0     

mse to w

r =

   -0.6287


p =

   1.5189e-04


ans =

  2×10 table

            region             p_uncorr       p_corr      BIC_orig    BIC_both      p_comp      BIC_dec    p_comp2       p_ax         r_ax  
    ______________________    __________    __________    ________    ________    __________    _______    _______    __________    ________

    'Frontal_Mid_2_R'         5.1555e-05    0.00010311    7524        7516.8      5.1573e-05    7828.7     0          8.1314e-05    -0.64789
    'Frontal_Sup_Medial_L'     1.006e-05     2.012e-05    7524        7513.7      1.0039e-05    7833.9     0          0.00015189    -0.62873

