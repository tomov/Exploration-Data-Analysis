
                            < M A T L A B (R) >
                  Copyright 1984-2017 The MathWorks, Inc.
                   R2017a (9.2.0.556344) 64-bit (glnxa64)
                               March 27, 2017

 
For online documentation, see http://www.mathworks.com/support
For product information, visit www.mathworks.com.
 
--------------------- BEGIN FILE univariate_decoder.m-------------------
% univariate decoder analysis 
% see if activation in ROI predicts choices better than regressor from model
%
% TODO dedupe with activations_analysis.m
% TODO dedupe with badre_2012_residuals_analysis_glm.m

function univariate_decoder(glmodel, regressor, contrast, normalize, do_orth, lambda, standardize, mixed_effects)

printcode;

EXPT = exploration_expt();

data = load_data;

if ~exist('do_orth', 'var')
    do_orth = false;
end
if ~exist('lambda', 'var')
    lambda = 1;
end
if ~exist('standardize', 'var')
    standardize = false;
end
if ~exist('mixed_effects', 'var')
    mixed_effects = false;
end

filename = sprintf('univariate_decoder_glm%d_%s_%s_norm=%d_orth=%d_lambda=%f_standardize=%d_mixed=%d.mat', glmodel, regressor, replace(contrast, ' ', '_'), normalize, do_orth, lambda, standardize, mixed_effects);
disp(filename);

% get ROI masks
switch contrast
    case 'badre'
        % clusters = masks from paper
        masks = badre_2012_create_masks(false);
        %masks = masks(1); % TODO use all masks

        for c = 1:length(masks)
            mask = masks{c};
            [~, masknames{c}, ~] = fileparts(mask);
            region{c,:} = masknames{c};
        end


    case 'dlpfc'
        % clusters = masks from paper
        masks = dlpfc_2012_create_masks(false);

        for c = 1:length(masks)
            mask = masks{c};
            [~, masknames{c}, ~] = fileparts(mask);
            region{c,:} = masknames{c};
        end


    case 'tommy'
        % clusters = masks from paper
        masks = tommy_2017_create_masks(false);

        for c = 1:length(masks)
            mask = masks{c};
            [~, masknames{c}, ~] = fileparts(mask);
            region{c,:} = masknames{c};
        end

    otherwise
        % group-level settings
        p = 0.001;
        alpha = 0.05;
        Dis = 20;
        Num = 1; % # peak voxels per cluster; default in bspmview is 3
        direct = '+';

        [V, Y, C, CI, region, extent, stat, mni, cor, results_table] = ccnl_extract_clusters(EXPT, glmodel, contrast, p, direct, alpha, Dis, Num);

        r = 10 / 1.5; % 10 mm radius

        % create spherical masks around peak voxel of each cluster (intersected with cluster)
        %
        for c = 1:length(region)
            masks{c} = sprintf('sphere_glm%d_%s_%d_%d_%d_r=%dmm.nii', glmodel, replace(contrast, ' ', '_'), mni(c,1), mni(c,2), mni(c,3), round(r * 1.5));
            cmask = CI == CI(cor(c,1), cor(c,2), cor(c,3));
            ccnl_create_spherical_mask(cor(c,1), cor(c,2), cor(c,3), r, masks{c}, cmask);
        end

end

% find peak of HRF
hrf = spm_hrf(0.001);
[~,hrf_offset] = max(hrf);
hrf_offset = hrf_offset / 1000;

nTRs = 242;
TR = EXPT.TR;
trs = TR/2 : TR : nTRs * TR;

[~,~,goodRuns] = exploration_getSubjectsDirsAndRuns();

% find closest TR to each trial onset (adjusted for HRF f'n)
for s = 1:length(data)
    act_idx = [];
    runs = find(goodRuns{s});
    data(s).bad_runs = ~ismember(data(s).run, runs); % exclude bad runs
    for i = 1:length(data(s).trial_onset)
        [~, idx] = min(abs(trs - (data(s).trial_onset(i) + hrf_offset)));
        if data(s).bad_runs(i)
            act_idx = [act_idx; NaN];
        else
            r = find(data(s).run(i) == runs); % scan session idx in GLM 
            act_idx = [act_idx; idx + nTRs * (r - 1)];
        end
    end
    data(s).trial_onset_act_idx = act_idx;
end


% define behavioral / hybrid GLM formulas
switch regressor
    case 'RU'
        if mixed_effects
            if do_orth
                formula_both = 'C ~ -1 + V + RU + VTU + decRU_orth + (-1 + V + RU + VTU + decRU_orth|S)';
            else
                formula_both = 'C ~ -1 + V + RU + VTU + decRU + (-1 + V + RU + VTU + decRU|S)';
            end
            formula_orig = 'C ~ -1 + V + RU + VTU + (-1 + V + RU + VTU|S)';
            formula_dec = 'C ~ -1 + V + decRU + VTU + (-1 + V + decRU + VTU|S)';
        else
            if do_orth
                formula_both = 'C ~ -1 + V + RU + VTU + decRU_orth';
            else
                formula_both = 'C ~ -1 + V + RU + VTU + decRU';
            end
            formula_orig = 'C ~ -1 + V + RU + VTU';
            formula_dec = 'C ~ -1 + V + decRU + VTU';
        end

    case 'TU'
        if mixed_effects
            if do_orth
                formula_both = 'C ~ -1 + V + RU + VTU + VdecTU_orth + (-1 + V + RU + VTU + VdecTU_orth|S)';
            else
                formula_both = 'C ~ -1 + V + RU + VTU + VdecTU + (-1 + V + RU + VTU + VdecTU|S)';
            end
            formula_orig = 'C ~ -1 + V + RU + VTU + (-1 + V + RU + VTU|S)';
            formula_dec = 'C ~ -1 + V + RU + VdecTU + (-1 + V + RU + VdecTU|S)';
        else
            if do_orth
                formula_both = 'C ~ -1 + V + RU + VTU + VdecTU_orth';
            else
                formula_both = 'C ~ -1 + V + RU + VTU + VdecTU';
            end
            formula_orig = 'C ~ -1 + V + RU + VTU';
            formula_dec = 'C ~ -1 + V + RU + VdecTU';
        end

    otherwise
        assert(false);
end


% get betas to (optionally) normalize activations in each run
for c = 1:length(masks)
    mask = masks{c};
    m = load_mask(mask);
    cnt = sum(m(:));

    for s = 1:length(data)
        runs = find(goodRuns{s});
        data(s).b{c} = nan(length(data(s).run), cnt);

        if normalize == 0
            % do nothing
        elseif normalize == 1
            % act_RU = (act - b0) / b_RU
            % i.e. assume other b's are insignificant
            %
            for run = 1:max(data(s).run)
                r = find(run == runs); % scan session idx in GLM
                if ~isempty(r)
                    % get beta for regressor
                    reg = ['Sn(', num2str(r), ') trial_onsetx', regressor];
                    fprintf('  c = %s, s = %d, run = %d, r = %d, reg = %s\n', mask, s, run, r, reg);
                    b = ccnl_get_beta(EXPT, glmodel, reg, mask, s);
                    data(s).b{c}(data(s).run == run, :) = repmat(b, sum(data(s).run == run), 1);

                    % get beta0
                    reg = ['Sn(', num2str(r), ') constant'];
                    fprintf('  c = %s, s = %d, run = %d, r = %d, reg = %s\n', mask, s, run, r, reg);
                    b0 = ccnl_get_beta(EXPT, glmodel, reg, mask, s);
                    data(s).b0{c}(data(s).run == run, :) = repmat(b0, sum(data(s).run == run), 1);
                end
            end
        elseif normalize == 2
            % act_RU = (act - X_\RU * b_\RU) ./ b_RU
            % i.e. take other regressors into accoutn
            %
            % TODO dedupe with ccnl_get_beta and ccnl_get_activations / ccnl_get_residuals
            % also improve those based on this
            %
            modeldir = fullfile(EXPT.modeldir,['model',num2str(glmodel)],['subj',num2str(s)]);
            load(fullfile(modeldir,'SPM.mat'));
            names = SPM.xX.name';
            cdir = pwd;
            cd(modeldir); % b/c SPM.Vbeta are relative to modeldir
            B = spm_data_read(SPM.Vbeta, find(m));
            cd(cdir);
            X = SPM.xX.X;

            % separate RU betas and regressors from the rest
            which_reg = contains(names, regressor);
            B_noreg = B(~which_reg, :);
            B_reg = B(which_reg, :);
            B_reg = repelem(B_reg, nTRs, 1); % we're need one for each TR b/c we're doing element-wise divison by b_RU
            X_noreg = X(:, ~which_reg);
            X_reg = X(:, which_reg);

            fprintf('  c = %s, s = %d\n', mask, s);

            data(s).B_noreg{c} = B_noreg;
            data(s).B_reg{c} = B_reg;
            data(s).X_noreg{c} = X_noreg;
            data(s).X_reg{c} = X_reg;

        elseif normalize == 3 || normalize == 4
            % act_RU = (act - X_\RU * b_\RU) ./ b_RU
            % i.e. take other regressors into accoutn
            % same as 2 BUT using whitened / filtered X and Y (!) like SPM
            %
            modeldir = fullfile(EXPT.modeldir,['model',num2str(glmodel)],['subj',num2str(s)]);
            load(fullfile(modeldir,'SPM.mat'));
            names = SPM.xX.name';
            cdir = pwd;
            cd(modeldir); % b/c SPM.Vbeta are relative to modeldir
            B = spm_data_read(SPM.Vbeta, find(m));
            cd(cdir);
            X = SPM.xX.xKXs.X;

            % separate RU betas and regressors from the rest
            which_reg = contains(names, regressor);
            B_noreg = B(~which_reg, :);
            B_reg = B(which_reg, :);
            B_reg = repelem(B_reg, nTRs, 1); % we're need one for each TR b/c we're doing element-wise divison by b_RU
            X_noreg = X(:, ~which_reg);
            X_reg = X(:, which_reg);

            fprintf('  c = %s, s = %d\n', mask, s);

            data(s).B_noreg{c} = B_noreg;
            data(s).B_reg{c} = B_reg;
            data(s).X_noreg{c} = X_noreg;
            data(s).X_reg{c} = X_reg;
        else
            assert(false);

        end
    end
end

% extract activations for each cluster
%
V_all = [];
for s = 1:length(data)
    modeldir = fullfile(EXPT.modeldir,['model',num2str(glmodel)],['subj',num2str(s)]);
    load(fullfile(modeldir,'SPM.mat'));

    clear act;
    for c = 1:length(masks)
        mask = masks{c};
        [~, masknames{c}, ~] = fileparts(mask);

        act{c} = ccnl_get_activations(EXPT, glmodel, mask, s);
        data(s).all_act{c} = act{c};

    end

    data(s).act = nan(length(data(s).run), length(masks));
    [V, RU, TU] = get_latents(data, s, logical(ones(length(data(s).run), 1)), 'left');
    data(s).RU = RU;
    data(s).TU = TU;
    V_all = [V_all; V(~data(s).timeout)];

    for c = 1:length(masks)
        if normalize == 2
            act{c} = (act{c} - data(s).X_noreg{c} * data(s).B_noreg{c}) ./ data(s).B_reg{c};
        elseif normalize == 3
            act{c} = spm_filter(SPM.xX.K,SPM.xX.W*act{c});
            act{c} = (act{c} - data(s).X_noreg{c} * data(s).B_noreg{c}) ./ data(s).B_reg{c};
        elseif normalize == 4
            % ridge regression -- regulalize by lambda
            % x_RU = (activation - sum of x_i * b_i, for i != RU) * b_RU / (b_RU^2 + lambda)
            % strictly speaking we should call it decRU instead of act but whatevs
            %
            act{c} = spm_filter(SPM.xX.K,SPM.xX.W*act{c});
            act{c} = (act{c} - data(s).X_noreg{c} * data(s).B_noreg{c}) .* data(s).B_reg{c} ./ (data(s).B_reg{c}.^2 + lambda);
        end

        % not all runs were used in the GLMs
        which_act = data(s).trial_onset_act_idx(~data(s).bad_runs); % trial onset activations
        act{c} = act{c}(which_act,:); % only consider 1 activation for each trial

        if normalize == 1
            act{c} = (act{c} - data(s).b0{c}(~data(s).bad_runs)) ./ data(s).b{c}(~data(s).bad_runs);
        end

        data(s).act(~data(s).bad_runs,c) = mean(act{c}, 2);

        % adjust for fact that the regressor was |RU|
        if glmodel == 21 && strcmp(regressor, 'RU')
            data(s).act(:,c) = data(s).act(:,c) .* (RU >= 0) + (-data(s).act(:,c)) .* (RU < 0);
        end
    end
end

save(filename, '-v7.3');


% fit behavioral GLM with activations
%
ps = [];
for c = 1:numel(masks)
    act = [];
    mse = [];
    bad_runs = logical([]);
    for s = 1:length(data)
        act = [act; data(s).act(~data(s).timeout, c)]; % even though neural GLMs includes timeouts, we exclude them for fitting the behavioral GLMs
        bad_runs = [bad_runs; data(s).bad_runs(~data(s).timeout)]; % bad runs are also out (their activations are NaNs)

        which = ~data(s).bad_runs & ~data(s).timeout;
        switch regressor % TODO act is still whitened & filtered => MSE might be wrong
            case 'RU'
                mse(s) = immse(data(s).RU(which), data(s).act(which, c));
            case 'TU'
                mse(s) = immse(data(s).TU(which), data(s).act(which, c));
        end
    end
    assert(all(isnan(act(bad_runs))));
    assert(all(~isnan(act(~bad_runs))));

    tbl = data2table(data,standardize,1); % exclude timeouts for fitting

    switch regressor
        case 'RU'
            decRU = act;
            if standardize == 1
                decRU(~bad_runs) = zscore(decRU(~bad_runs));
            elseif standardize == 2
                decRU(~bad_runs) = decRU(~bad_runs) / norm(decRU(~bad_runs));
            end
            tbl = [tbl table(decRU)];

            % orthogonalized version
            tmp = spm_orth([tbl.RU(~bad_runs), decRU(~bad_runs)]);
            decRU_orth = decRU;
            decRU_orth(~bad_runs) = tmp(:,2);
            if standardize == 1
                decRU_orth(~bad_runs) = zscore(decRU_orth(~bad_runs));
            elseif standardize == 2
                decRU_orth(~bad_runs) = decRU_orth(~bad_runs) / norm(decRU_orth(~bad_runs));
            end
            tbl = [tbl table(decRU_orth)];

        case 'TU'
            VdecTU = V_all ./ act;
            if standardize == 1
                VdecTU(~bad_runs) = zscore(VdecTU(~bad_runs));
            elseif standardize == 2
                VdecTU(~bad_runs) = VdecTU(~bad_runs) / norm(VdecTU(~bad_runs));
            end
            tbl = [tbl table(VdecTU)];

            % orthogonalized version
            tmp = spm_orth([tbl.VTU(~bad_runs), VdecTU(~bad_runs)]);
            VdecTU_orth = VdecTU;
            VdecTU_orth(~bad_runs) = tmp(:,2); 
            if standardize == 1
                VdecTU_orth(~bad_runs) = zscore(VdecTU_orth(~bad_runs));
            elseif standardize == 2
                VdecTU_orth(~bad_runs) = VdecTU_orth(~bad_runs) / norm(VdecTU_orth(~bad_runs));
            end
            tbl = [tbl table(VdecTU_orth)];
        otherwise
            assert(false);
    end

    % glm with both RU and actRU
    results_both{c} = fitglme(tbl,formula_both,'Distribution','Binomial','Link','Probit','FitMethod','Laplace', 'CovariancePattern','diagonal', 'Exclude',bad_runs);
    [w, names, stats] = fixedEffects(results_both{c});
    ps(c,:) = stats.pValue';
    results_both{c}
    stats.pValue
    w

    % glm with RU only
    % do model comparison
    results_orig{c} = fitglme(tbl,formula_orig,'Distribution','Binomial','Link','Probit','FitMethod','Laplace', 'CovariancePattern','diagonal', 'Exclude',bad_runs);
    comp{c} = compare(results_orig{c}, results_both{c}); % order is important -- see docs
    comp{c}
    p_comp(c,:) = comp{c}.pValue(2);
    BIC(c,:) = comp{c}.BIC';

    % glm with actRU only
    % do second model comparison
    results_dec{c} = fitglme(tbl,formula_dec,'Distribution','Binomial','Link','Probit','FitMethod','Laplace', 'CovariancePattern','diagonal', 'Exclude',bad_runs);
    comp2{c} = compare(results_dec{c}, results_both{c}); % order is important -- see docs
    comp2{c}
    p_comp2(c,:) = comp2{c}.pValue(2);
    BIC2(c,:) = comp2{c}.BIC';


    % sanity check -- activations should correlate with regressor
    switch regressor
        case 'RU'
            RU = table2array(tbl(:,'RU'));
            [r,p] = corr(RU(~bad_runs), act(~bad_runs));
        case 'TU'
            TU = table2array(tbl(:,'TU'));
            [r,p] = corr(TU(~bad_runs), act(~bad_runs));
    end


    pears_rs(c,:) = r;
    pears_ps(c,:) = p;

    % correlate MSE with behavioral weights across subjects
    % => see if better decodeability is associated with more reliance on regressor in decision
    %
    if standardize == 1
        load results_glme_fig3.mat;
    elseif standardize == 2
        load results_glme_fig3_norm.mat;
    else
        load results_glme_fig3_nozscore.mat;
    end

    w = getEffects(results_VTURU, false);
    switch regressor
        case 'RU'
            [r, p] = corr(abs(w(:,2)), mse');
        case 'TU'
            [r, p] = corr(abs(w(:,3)), mse');
        otherwise
            assert(false);
    end
    disp('mse to w');
    r
    p
    p_ax(c,:) = p;
    r_ax(c,:) = r;
end


save(filename, '-v7.3');


p_uncorr = ps(:,4);
p_corr = 1 - (1 - p_uncorr) .^ numel(p_uncorr);
BIC_orig = BIC(:,1);
BIC_both = BIC(:,2);
BIC_dec = BIC2(:,1);
table(region, p_uncorr, p_corr, pears_rs, pears_ps, BIC_orig, BIC_both, p_comp, BIC_dec, p_comp2, p_ax, r_ax)


--------------------- END FILE univariate_decoder.m-------------------
       datadir: '/ncf/gershman/Lab/Exploration/subjects/180725_UEP_001/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180727_UEP_002/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180727_UEP_003/preproc'
    structural: 'struct.nii'
    functional: {1×6 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180730_UEP_004/preproc'
    structural: 'struct.nii'
    functional: {1×6 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180730_UEP_005/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180801_UEP_006/preproc'
    structural: 'struct.nii'
    functional: {1×7 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180802_UEP_007/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180803_UEP_008/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180803_UEP_009/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP010/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_011/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_012/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_013/preproc'
    structural: 'struct.nii'
    functional: {1×7 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_014/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_015/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_016/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_017/preproc'
    structural: 'struct.nii'
    functional: {1×7 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_018_2/preproc'
    structural: 'struct.nii'
    functional: {1×7 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_019/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_020/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_021/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180806_UEP_022/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180806_UEP_023/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180807_UEP_024/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180807_UEP_025/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180807_UEP_026/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180808_UEP_027/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180808_UEP_028/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180808_UEP_029/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180809_UEP_030/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180809_UEP_031/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

univariate_decoder_glm21_TU_RU_-_trial_norm=4_orth=1_lambda=1.000000_standardize=2_mixed=0.mat
bspm_extract_clusters(/ncf/gershman/Lab/Exploration/glmOutput/model21/con5/spmT_0001.nii, 0.001000, +, 0.050000, 20, 1, 30, /ncf/gershman/Lab/scripts/ccnl-fmri-2018/atlases, AAL2)
[Warning: No voxels found after cluster FWE correction. Setting extent threshold
= 5.] 
[> In ccnl_extract_clusters>bspm_extract_clusters (line 146)
  In ccnl_extract_clusters (line 85)
  In univariate_decoder (line 74)] 
  Columns 1 through 6

    'Positive'    'Location not in ...'    [102]    [4.9221]    [ 22]    [ 36]
            []    'Frontal_Mid_2_R'        [177]    [4.7206]    [ 34]    [ 50]
            []    'Parietal_Inf_R'         [ 49]    [4.4973]    [ 52]    [-58]
            []    'Location not in ...'    [  7]    [4.0179]    [-52]    [-56]
            []    'Frontal_Sup_2_L'        [  6]    [4.0130]    [-20]    [ 48]
            []    'Frontal_Mid_2_R'        [ 48]    [3.7128]    [ 42]    [ 26]
            []    'Frontal_Mid_2_L'        [ 55]    [3.6813]    [-34]    [ 48]

  Column 7

    [ -2]
    [-10]
    [ 50]
    [ 52]
    [-12]
    [ 38]
    [ -4]

  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 1
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 2
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 3
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 4
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 5
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 6
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 7
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 8
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 9
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 10
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 11
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 12
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 13
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 14
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 15
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 16
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 17
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 18
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 19
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 20
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 21
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 22
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 23
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 24
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 25
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 26
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 27
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 28
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 29
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 30
  c = sphere_glm21_RU_-_trial_22_36_-2_r=10mm.nii, s = 31
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 1
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 2
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 3
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 4
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 5
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 6
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 7
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 8
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 9
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 10
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 11
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 12
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 13
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 14
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 15
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 16
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 17
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 18
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 19
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 20
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 21
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 22
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 23
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 24
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 25
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 26
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 27
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 28
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 29
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 30
  c = sphere_glm21_RU_-_trial_34_50_-10_r=10mm.nii, s = 31
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 1
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 2
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 3
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 4
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 5
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 6
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 7
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 8
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 9
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 10
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 11
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 12
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 13
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 14
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 15
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 16
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 17
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 18
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 19
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 20
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 21
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 22
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 23
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 24
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 25
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 26
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 27
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 28
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 29
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 30
  c = sphere_glm21_RU_-_trial_52_-58_50_r=10mm.nii, s = 31
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 1
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 2
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 3
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 4
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 5
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 6
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 7
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 8
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 9
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 10
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 11
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 12
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 13
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 14
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 15
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 16
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 17
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 18
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 19
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 20
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 21
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 22
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 23
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 24
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 25
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 26
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 27
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 28
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 29
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 30
  c = sphere_glm21_RU_-_trial_-52_-56_52_r=10mm.nii, s = 31
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 1
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 2
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 3
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 4
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 5
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 6
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 7
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 8
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 9
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 10
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 11
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 12
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 13
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 14
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 15
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 16
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 17
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 18
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 19
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 20
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 21
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 22
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 23
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 24
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 25
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 26
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 27
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 28
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 29
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 30
  c = sphere_glm21_RU_-_trial_-20_48_-12_r=10mm.nii, s = 31
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 1
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 2
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 3
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 4
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 5
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 6
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 7
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 8
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 9
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 10
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 11
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 12
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 13
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 14
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 15
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 16
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 17
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 18
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 19
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 20
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 21
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 22
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 23
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 24
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 25
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 26
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 27
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 28
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 29
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 30
  c = sphere_glm21_RU_-_trial_42_26_38_r=10mm.nii, s = 31
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 1
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 2
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 3
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 4
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 5
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 6
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 7
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 8
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 9
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 10
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 11
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 12
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 13
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 14
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 15
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 16
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 17
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 18
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 19
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 20
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 21
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 22
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 23
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 24
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 25
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 26
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 27
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 28
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 29
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 30
  c = sphere_glm21_RU_-_trial_-34_48_-4_r=10mm.nii, s = 31
mask
Computed activations for subject 1
mask
Computed activations for subject 1
mask
Computed activations for subject 1
mask
Computed activations for subject 1
mask
Computed activations for subject 1
mask
Computed activations for subject 1
mask
Computed activations for subject 1
mask
Computed activations for subject 2
mask
Computed activations for subject 2
mask
Computed activations for subject 2
mask
Computed activations for subject 2
mask
Computed activations for subject 2
mask
Computed activations for subject 2
mask
Computed activations for subject 2
mask
Computed activations for subject 3
mask
Computed activations for subject 3
mask
Computed activations for subject 3
mask
Computed activations for subject 3
mask
Computed activations for subject 3
mask
Computed activations for subject 3
mask
Computed activations for subject 3
mask
Computed activations for subject 4
mask
Computed activations for subject 4
mask
Computed activations for subject 4
mask
Computed activations for subject 4
mask
Computed activations for subject 4
mask
Computed activations for subject 4
mask
Computed activations for subject 4
mask
Computed activations for subject 5
mask
Computed activations for subject 5
mask
Computed activations for subject 5
mask
Computed activations for subject 5
mask
Computed activations for subject 5
mask
Computed activations for subject 5
mask
Computed activations for subject 5
mask
Computed activations for subject 6
mask
Computed activations for subject 6
mask
Computed activations for subject 6
mask
Computed activations for subject 6
mask
Computed activations for subject 6
mask
Computed activations for subject 6
mask
Computed activations for subject 6
mask
Computed activations for subject 7
mask
Computed activations for subject 7
mask
Computed activations for subject 7
mask
Computed activations for subject 7
mask
Computed activations for subject 7
mask
Computed activations for subject 7
mask
Computed activations for subject 7
mask
Computed activations for subject 8
mask
Computed activations for subject 8
mask
Computed activations for subject 8
mask
Computed activations for subject 8
mask
Computed activations for subject 8
mask
Computed activations for subject 8
mask
Computed activations for subject 8
mask
Computed activations for subject 9
mask
Computed activations for subject 9
mask
Computed activations for subject 9
mask
Computed activations for subject 9
mask
Computed activations for subject 9
mask
Computed activations for subject 9
mask
Computed activations for subject 9
mask
Computed activations for subject 10
mask
Computed activations for subject 10
mask
Computed activations for subject 10
mask
Computed activations for subject 10
mask
Computed activations for subject 10
mask
Computed activations for subject 10
mask
Computed activations for subject 10
mask
Computed activations for subject 11
mask
Computed activations for subject 11
mask
Computed activations for subject 11
mask
Computed activations for subject 11
mask
Computed activations for subject 11
mask
Computed activations for subject 11
mask
Computed activations for subject 11
mask
Computed activations for subject 12
mask
Computed activations for subject 12
mask
Computed activations for subject 12
mask
Computed activations for subject 12
mask
Computed activations for subject 12
mask
Computed activations for subject 12
mask
Computed activations for subject 12
mask
Computed activations for subject 13
mask
Computed activations for subject 13
mask
Computed activations for subject 13
mask
Computed activations for subject 13
mask
Computed activations for subject 13
mask
Computed activations for subject 13
mask
Computed activations for subject 13
mask
Computed activations for subject 14
mask
Computed activations for subject 14
mask
Computed activations for subject 14
mask
Computed activations for subject 14
mask
Computed activations for subject 14
mask
Computed activations for subject 14
mask
Computed activations for subject 14
mask
Computed activations for subject 15
mask
Computed activations for subject 15
mask
Computed activations for subject 15
mask
Computed activations for subject 15
mask
Computed activations for subject 15
mask
Computed activations for subject 15
mask
Computed activations for subject 15
mask
Computed activations for subject 16
mask
Computed activations for subject 16
mask
Computed activations for subject 16
mask
Computed activations for subject 16
mask
Computed activations for subject 16
mask
Computed activations for subject 16
mask
Computed activations for subject 16
mask
Computed activations for subject 17
mask
Computed activations for subject 17
mask
Computed activations for subject 17
mask
Computed activations for subject 17
mask
Computed activations for subject 17
mask
Computed activations for subject 17
mask
Computed activations for subject 17
mask
Computed activations for subject 18
mask
Computed activations for subject 18
mask
Computed activations for subject 18
mask
Computed activations for subject 18
mask
Computed activations for subject 18
mask
Computed activations for subject 18
mask
Computed activations for subject 18
mask
Computed activations for subject 19
mask
Computed activations for subject 19
mask
Computed activations for subject 19
mask
Computed activations for subject 19
mask
Computed activations for subject 19
mask
Computed activations for subject 19
mask
Computed activations for subject 19
mask
Computed activations for subject 20
mask
Computed activations for subject 20
mask
Computed activations for subject 20
mask
Computed activations for subject 20
mask
Computed activations for subject 20
mask
Computed activations for subject 20
mask
Computed activations for subject 20
mask
Computed activations for subject 21
mask
Computed activations for subject 21
mask
Computed activations for subject 21
mask
Computed activations for subject 21
mask
Computed activations for subject 21
mask
Computed activations for subject 21
mask
Computed activations for subject 21
mask
Computed activations for subject 22
mask
Computed activations for subject 22
mask
Computed activations for subject 22
mask
Computed activations for subject 22
mask
Computed activations for subject 22
mask
Computed activations for subject 22
mask
Computed activations for subject 22
mask
Computed activations for subject 23
mask
Computed activations for subject 23
mask
Computed activations for subject 23
mask
Computed activations for subject 23
mask
Computed activations for subject 23
mask
Computed activations for subject 23
mask
Computed activations for subject 23
mask
Computed activations for subject 24
mask
Computed activations for subject 24
mask
Computed activations for subject 24
mask
Computed activations for subject 24
mask
Computed activations for subject 24
mask
Computed activations for subject 24
mask
Computed activations for subject 24
mask
Computed activations for subject 25
mask
Computed activations for subject 25
mask
Computed activations for subject 25
mask
Computed activations for subject 25
mask
Computed activations for subject 25
mask
Computed activations for subject 25
mask
Computed activations for subject 25
mask
Computed activations for subject 26
mask
Computed activations for subject 26
mask
Computed activations for subject 26
mask
Computed activations for subject 26
mask
Computed activations for subject 26
mask
Computed activations for subject 26
mask
Computed activations for subject 26
mask
Computed activations for subject 27
mask
Computed activations for subject 27
mask
Computed activations for subject 27
mask
Computed activations for subject 27
mask
Computed activations for subject 27
mask
Computed activations for subject 27
mask
Computed activations for subject 27
mask
Computed activations for subject 28
mask
Computed activations for subject 28
mask
Computed activations for subject 28
mask
Computed activations for subject 28
mask
Computed activations for subject 28
mask
Computed activations for subject 28
mask
Computed activations for subject 28
mask
Computed activations for subject 29
mask
Computed activations for subject 29
mask
Computed activations for subject 29
mask
Computed activations for subject 29
mask
Computed activations for subject 29
mask
Computed activations for subject 29
mask
Computed activations for subject 29
mask
Computed activations for subject 30
mask
Computed activations for subject 30
mask
Computed activations for subject 30
mask
Computed activations for subject 30
mask
Computed activations for subject 30
mask
Computed activations for subject 30
mask
Computed activations for subject 30
mask
Computed activations for subject 31
mask
Computed activations for subject 31
mask
Computed activations for subject 31
mask
Computed activations for subject 31
mask
Computed activations for subject 31
mask
Computed activations for subject 31
mask
Computed activations for subject 31
[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 387)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + VdecTU_orth

Model fit statistics:
    AIC       BIC       LogLikelihood    Deviance
    7501.5    7530.2    -3746.8          7493.5  

Fixed effects coefficients (95% CIs):
    Name                 Estimate    SE        tStat     DF      pValue   
    'RU'                 34.283      1.7441    19.656    9475            0
    'VTU'                21.995      3.7948    5.7961    9475    7.005e-09
    'V'                  146.01      3.0406     48.02    9475            0
    'VdecTU_orth'        2.6894      1.3926    1.9312    9475     0.053485


    Lower       Upper 
      30.864    37.702
      14.557    29.434
      140.05    151.97
    -0.04037    5.4192

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

         0
    0.0000
         0
    0.0535


w =

   34.2830
   21.9953
  146.0098
    2.6894

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 396)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7502.5      7524    -3748.3                     
    ALTGLME    4     7501.5    7530.2    -3746.8    3.0114    1      


    pValue  
            
    0.082682

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 404)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7537.1    7558.6    -3765.5                     
    ALTGLME    4     7501.5    7530.2    -3746.8    37.567    1      


    pValue   
             
    8.832e-10

mse to w

r =

   -0.1421


p =

    0.4457

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 387)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + VdecTU_orth

Model fit statistics:
    AIC       BIC       LogLikelihood    Deviance
    7504.1    7532.7    -3748.1          7496.1  

Fixed effects coefficients (95% CIs):
    Name                 Estimate    SE        tStat      DF      pValue    
    'RU'                 34.199      1.7425     19.626    9475             0
    'VTU'                22.044       3.794     5.8103    9475    6.4373e-09
    'V'                  145.77      3.0344      48.04    9475             0
    'VdecTU_orth'        1.5028      2.7954    0.53759    9475       0.59087


    Lower      Upper 
     30.783    37.615
     14.607    29.481
     139.82    151.72
    -3.9768    6.9824

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

         0
    0.0000
         0
    0.5909


w =

   34.1992
   22.0440
  145.7718
    1.5028

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 396)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat     deltaDF
    GLME       3     7502.5      7524    -3748.3                      
    ALTGLME    4     7504.1    7532.7    -3748.1    0.43334    1      


    pValue 
           
    0.51036

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 404)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3       7540    7561.5      -3767                     
    ALTGLME    4     7504.1    7532.7    -3748.1    37.925    1      


    pValue    
              
    7.3512e-10

mse to w

r =

   -0.1041


p =

    0.5773

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 387)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + VdecTU_orth

Model fit statistics:
    AIC       BIC       LogLikelihood    Deviance
    7504.4    7533.1    -3748.2          7496.4  

Fixed effects coefficients (95% CIs):
    Name                 Estimate    SE        tStat      DF      pValue    
    'RU'                  34.193     1.7426     19.622    9475             0
    'VTU'                 22.046     3.7944     5.8102    9475    6.4418e-09
    'V'                   145.79     3.0355     48.029    9475             0
    'VdecTU_orth'        0.93775     2.7801    0.33731    9475       0.73589


    Lower      Upper 
     30.777    37.609
     14.608    29.484
     139.84    151.74
    -4.5118    6.3873

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

         0
    0.0000
         0
    0.7359


w =

   34.1930
   22.0461
  145.7920
    0.9377

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 396)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat      deltaDF
    GLME       3     7502.5      7524    -3748.3                       
    ALTGLME    4     7504.4    7533.1    -3748.2    0.092978    1      


    pValue 
           
    0.76042

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 404)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7540.4    7561.8    -3767.2                     
    ALTGLME    4     7504.4    7533.1    -3748.2    37.914    1      


    pValue    
              
    7.3924e-10

mse to w

r =

   -0.0841


p =

    0.6528

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 387)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + VdecTU_orth

Model fit statistics:
    AIC     BIC       LogLikelihood    Deviance
    7496    7524.6    -3744            7488    

Fixed effects coefficients (95% CIs):
    Name                 Estimate    SE        tStat     DF      pValue    
    'RU'                 34.259      1.7438    19.646    9475             0
    'VTU'                21.949       3.796    5.7821    9475    7.6109e-09
    'V'                  145.87      3.0388    48.002    9475             0
    'VdecTU_orth'        8.8982      3.2552    2.7335    9475     0.0062774


    Lower     Upper 
     30.84    37.677
    14.508     29.39
    139.91    151.83
    2.5173    15.279

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

         0
    0.0000
         0
    0.0063


w =

   34.2587
   21.9488
  145.8685
    8.8982

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 396)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7502.5      7524    -3748.3                     
    ALTGLME    4       7496    7524.6      -3744    8.5449    1      


    pValue   
             
    0.0034649

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 404)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7532.9    7554.3    -3763.4                     
    ALTGLME    4       7496    7524.6      -3744    38.879    1      


    pValue    
              
    4.5082e-10

mse to w

r =

   -0.2060


p =

    0.2662

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 387)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + VdecTU_orth

Model fit statistics:
    AIC       BIC       LogLikelihood    Deviance
    7501.2    7529.9    -3746.6          7493.2  

Fixed effects coefficients (95% CIs):
    Name                 Estimate    SE        tStat      DF      pValue    
    'RU'                  34.267     1.7438     19.651    9475             0
    'VTU'                 22.192     3.8045     5.8333    9475    5.6134e-09
    'V'                   145.87     3.0365     48.038    9475             0
    'VdecTU_orth'        -3.6152       1.98    -1.8259    9475      0.067904


    Lower      Upper  
     30.849     37.685
     14.735      29.65
     139.91     151.82
    -7.4964    0.26603

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

         0
    0.0000
         0
    0.0679


w =

   34.2671
   22.1924
  145.8658
   -3.6152

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 396)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF    pValue 
    GLME       3     7502.5      7524    -3748.3                                
    ALTGLME    4     7501.2    7529.9    -3746.6    3.3071    1          0.06898

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 404)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7537.3    7558.8    -3765.6                     
    ALTGLME    4     7501.2    7529.9    -3746.6    38.066    1      


    pValue    
              
    6.8402e-10

mse to w

r =

   -0.0955


p =

    0.6095

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 387)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + VdecTU_orth

Model fit statistics:
    AIC       BIC     LogLikelihood    Deviance
    7504.4    7533    -3748.2          7496.4  

Fixed effects coefficients (95% CIs):
    Name                 Estimate    SE        tStat      DF      pValue   
    'RU'                  34.171     1.7433     19.601    9475            0
    'VTU'                 22.059     3.7945     5.8133    9475    6.325e-09
    'V'                   145.71     3.0377     47.967    9475            0
    'VdecTU_orth'        0.75921      2.251    0.33727    9475      0.73592


    Lower      Upper 
     30.754    37.588
      14.62    29.497
     139.75    151.66
    -3.6533    5.1717

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

         0
    0.0000
         0
    0.7359


w =

   34.1711
   22.0586
  145.7093
    0.7592

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 396)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC     LogLik     LRStat    deltaDF    pValue 
    GLME       3     7502.5    7524    -3748.3                                
    ALTGLME    4     7504.4    7533    -3748.2    0.1239    1          0.72484

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 404)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7540.3    7561.8    -3767.2                     
    ALTGLME    4     7504.4      7533    -3748.2    37.912    1      


    pValue    
              
    7.4001e-10

mse to w

r =

   -0.0099


p =

    0.9577

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 387)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + VdecTU_orth

Model fit statistics:
    AIC     BIC       LogLikelihood    Deviance
    7504    7532.6    -3748            7496    

Fixed effects coefficients (95% CIs):
    Name                 Estimate    SE        tStat      DF      pValue    
    'RU'                 34.202      1.7426     19.628    9475             0
    'VTU'                 22.01      3.7939     5.8015    9475    6.7814e-09
    'V'                  145.78      3.0335     48.058    9475             0
    'VdecTU_orth'        2.1935      2.8967    0.75724    9475       0.44893


    Lower      Upper 
     30.787    37.618
     14.573    29.447
     139.84    151.73
    -3.4846    7.8716

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

         0
    0.0000
         0
    0.4489


w =

   34.2024
   22.0102
  145.7826
    2.1935

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 396)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat     deltaDF
    GLME       3     7502.5      7524    -3748.3                      
    ALTGLME    4       7504    7532.6      -3748    0.51741    1      


    pValue 
           
    0.47195

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 404)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7539.8    7561.3    -3766.9                     
    ALTGLME    4       7504    7532.6      -3748    37.772    1      


    pValue    
              
    7.9521e-10

mse to w

r =

   -0.1588


p =

    0.3934


ans =

  7×12 table

            region             p_uncorr      p_corr     pears_rs      pears_ps     BIC_orig    BIC_both     p_comp      BIC_dec     p_comp2       p_ax         r_ax   
    _______________________    _________    ________    _________    __________    ________    ________    _________    _______    __________    _______    __________

    'Location not in atlas'     0.053485      0.3194    -0.029125       0.00457    7524        7530.2       0.082682    7558.6      8.832e-10     0.4457      -0.14211
    'Frontal_Mid_2_R'            0.59087     0.99808      -0.0237      0.021028    7524        7532.7        0.51036    7561.5     7.3512e-10     0.5773      -0.10411
    'Parietal_Inf_R'             0.73589     0.99991    -0.020975      0.041147    7524        7533.1        0.76042    7561.8     7.3924e-10    0.65279     -0.084116
    'Location not in atlas'    0.0062774    0.043123    -0.014898       0.14695    7524        7524.6      0.0034649    7554.3     4.5082e-10    0.26617      -0.20602
    'Frontal_Sup_2_L'           0.067904     0.38874    -0.013749       0.18073    7524        7529.9        0.06898    7558.8     6.8402e-10    0.60951     -0.095451
    'Frontal_Mid_2_R'            0.73592     0.99991    -0.038646    0.00016756    7524          7533        0.72484    7561.8     7.4001e-10     0.9577    -0.0099341
    'Frontal_Mid_2_L'            0.44893     0.98457    -0.030994     0.0025456    7524        7532.6        0.47195    7561.3     7.9521e-10    0.39337      -0.15885

