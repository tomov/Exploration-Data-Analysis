
                            < M A T L A B (R) >
                  Copyright 1984-2017 The MathWorks, Inc.
                   R2017a (9.2.0.556344) 64-bit (glnxa64)
                               March 27, 2017

 
For online documentation, see http://www.mathworks.com/support
For product information, visit www.mathworks.com.
 
--------------------- BEGIN FILE univariate_decoder.m-------------------
% univariate decoder analysis 
% see if activation in ROI predicts choices better than regressor from model
%
% TODO dedupe with activations_analysis.m
% TODO dedupe with badre_2012_residuals_analysis_glm.m

function univariate_decoder(glmodel, regressor, contrast, normalize, do_orth, lambda, standardize, mixed_effects)

printcode;

EXPT = exploration_expt();

data = load_data;

if ~exist('do_orth', 'var')
    do_orth = false;
end
if ~exist('lambda', 'var')
    lambda = 1;
end
if ~exist('standardize', 'var')
    standardize = false;
end
if ~exist('mixed_effects', 'var')
    mixed_effects = false;
end

filename = sprintf('univariate_decoder_glm%d_%s_%s_norm=%d_orth=%d_lambda=%f_standardize=%d_mixed=%d.mat', glmodel, regressor, replace(contrast, ' ', '_'), normalize, do_orth, lambda, standardize, mixed_effects);
disp(filename);

% get ROI masks
switch contrast
    case 'badre'
        % clusters = masks from paper
        masks = badre_2012_create_masks(false);
        %masks = masks(1); % TODO use all masks

        for c = 1:length(masks)
            mask = masks{c};
            [~, masknames{c}, ~] = fileparts(mask);
            region{c,:} = masknames{c};
        end

    case 'tommy'
        % clusters = masks from paper
        masks = tommy_2017_create_masks(false);

        for c = 1:length(masks)
            mask = masks{c};
            [~, masknames{c}, ~] = fileparts(mask);
            region{c,:} = masknames{c};
        end

    otherwise
        % group-level settings
        p = 0.001;
        alpha = 0.05;
        Dis = 20;
        Num = 1; % # peak voxels per cluster; default in bspmview is 3
        direct = '+';

        [V, Y, C, CI, region, extent, stat, mni, cor, results_table] = ccnl_extract_clusters(EXPT, glmodel, contrast, p, direct, alpha, Dis, Num);

        r = 10 / 1.5; % 10 mm radius

        % create spherical masks around peak voxel of each cluster (intersected with cluster)
        %
        for c = 1:length(region)
            masks{c} = sprintf('sphere_glm%d_%s_%d_%d_%d_r=%dmm.nii', glmodel, replace(contrast, ' ', '_'), mni(c,1), mni(c,2), mni(c,3), round(r * 1.5));
            cmask = CI == CI(cor(c,1), cor(c,2), cor(c,3));
            ccnl_create_spherical_mask(cor(c,1), cor(c,2), cor(c,3), r, masks{c}, cmask);
        end

end

% find peak of HRF
hrf = spm_hrf(0.001);
[~,hrf_offset] = max(hrf);
hrf_offset = hrf_offset / 1000;

nTRs = 242;
TR = EXPT.TR;
trs = TR/2 : TR : nTRs * TR;

[~,~,goodRuns] = exploration_getSubjectsDirsAndRuns();

% find closest TR to each trial onset (adjusted for HRF f'n)
for s = 1:length(data)
    act_idx = [];
    runs = find(goodRuns{s});
    data(s).bad_runs = ~ismember(data(s).run, runs); % exclude bad runs
    for i = 1:length(data(s).trial_onset)
        [~, idx] = min(abs(trs - (data(s).trial_onset(i) + hrf_offset)));
        if data(s).bad_runs(i)
            act_idx = [act_idx; NaN];
        else
            r = find(data(s).run(i) == runs); % scan session idx in GLM 
            act_idx = [act_idx; idx + nTRs * (r - 1)];
        end
    end
    data(s).trial_onset_act_idx = act_idx;
end


% define behavioral / hybrid GLM formulas
switch regressor
    case 'RU'
        if mixed_effects
            if do_orth
                formula_both = 'C ~ -1 + V + RU + VTU + decRU_orth + (-1 + V + RU + VTU + decRU_orth|S)';
            else
                formula_both = 'C ~ -1 + V + RU + VTU + decRU + (-1 + V + RU + VTU + decRU|S)';
            end
            formula_orig = 'C ~ -1 + V + RU + VTU + (-1 + V + RU + VTU|S)';
            formula_dec = 'C ~ -1 + V + decRU + VTU + (-1 + V + decRU + VTU|S)';
        else
            if do_orth
                formula_both = 'C ~ -1 + V + RU + VTU + decRU_orth';
            else
                formula_both = 'C ~ -1 + V + RU + VTU + decRU';
            end
            formula_orig = 'C ~ -1 + V + RU + VTU';
            formula_dec = 'C ~ -1 + V + decRU + VTU';
        end

    case 'TU'
        if mixed_effects
            if do_orth
                formula_both = 'C ~ -1 + V + RU + VTU + VdecTU_orth + (-1 + V + RU + VTU + VdecTU_orth|S)';
            else
                formula_both = 'C ~ -1 + V + RU + VTU + VdecTU + (-1 + V + RU + VTU + VdecTU|S)';
            end
            formula_orig = 'C ~ -1 + V + RU + VTU + (-1 + V + RU + VTU|S)';
            formula_dec = 'C ~ -1 + V + RU + VdecTU + (-1 + V + RU + VdecTU|S)';
        else
            if do_orth
                formula_both = 'C ~ -1 + V + RU + VTU + VdecTU_orth';
            else
                formula_both = 'C ~ -1 + V + RU + VTU + VdecTU';
            end
            formula_orig = 'C ~ -1 + V + RU + VTU';
            formula_dec = 'C ~ -1 + V + RU + VdecTU';
        end

    otherwise
        assert(false);
end


% get betas to (optionally) normalize activations in each run
for c = 1:length(masks)
    mask = masks{c};
    m = load_mask(mask);
    cnt = sum(m(:));

    for s = 1:length(data)
        runs = find(goodRuns{s});
        data(s).b{c} = nan(length(data(s).run), cnt);

        if normalize == 0
            % do nothing
        elseif normalize == 1
            % act_RU = (act - b0) / b_RU
            % i.e. assume other b's are insignificant
            %
            for run = 1:max(data(s).run)
                r = find(run == runs); % scan session idx in GLM
                if ~isempty(r)
                    % get beta for regressor
                    reg = ['Sn(', num2str(r), ') trial_onsetx', regressor];
                    fprintf('  c = %s, s = %d, run = %d, r = %d, reg = %s\n', mask, s, run, r, reg);
                    b = ccnl_get_beta(EXPT, glmodel, reg, mask, s);
                    data(s).b{c}(data(s).run == run, :) = repmat(b, sum(data(s).run == run), 1);

                    % get beta0
                    reg = ['Sn(', num2str(r), ') constant'];
                    fprintf('  c = %s, s = %d, run = %d, r = %d, reg = %s\n', mask, s, run, r, reg);
                    b0 = ccnl_get_beta(EXPT, glmodel, reg, mask, s);
                    data(s).b0{c}(data(s).run == run, :) = repmat(b0, sum(data(s).run == run), 1);
                end
            end
        elseif normalize == 2
            % act_RU = (act - X_\RU * b_\RU) ./ b_RU
            % i.e. take other regressors into accoutn
            %
            % TODO dedupe with ccnl_get_beta and ccnl_get_activations / ccnl_get_residuals
            % also improve those based on this
            %
            modeldir = fullfile(EXPT.modeldir,['model',num2str(glmodel)],['subj',num2str(s)]);
            load(fullfile(modeldir,'SPM.mat'));
            names = SPM.xX.name';
            cdir = pwd;
            cd(modeldir); % b/c SPM.Vbeta are relative to modeldir
            B = spm_data_read(SPM.Vbeta, find(m));
            cd(cdir);
            X = SPM.xX.X;

            % separate RU betas and regressors from the rest
            which_reg = contains(names, regressor);
            B_noreg = B(~which_reg, :);
            B_reg = B(which_reg, :);
            B_reg = repelem(B_reg, nTRs, 1); % we're need one for each TR b/c we're doing element-wise divison by b_RU
            X_noreg = X(:, ~which_reg);
            X_reg = X(:, which_reg);

            fprintf('  c = %s, s = %d\n', mask, s);

            data(s).B_noreg{c} = B_noreg;
            data(s).B_reg{c} = B_reg;
            data(s).X_noreg{c} = X_noreg;
            data(s).X_reg{c} = X_reg;

        elseif normalize == 3 || normalize == 4
            % act_RU = (act - X_\RU * b_\RU) ./ b_RU
            % i.e. take other regressors into accoutn
            % same as 2 BUT using whitened / filtered X and Y (!) like SPM
            %
            modeldir = fullfile(EXPT.modeldir,['model',num2str(glmodel)],['subj',num2str(s)]);
            load(fullfile(modeldir,'SPM.mat'));
            names = SPM.xX.name';
            cdir = pwd;
            cd(modeldir); % b/c SPM.Vbeta are relative to modeldir
            B = spm_data_read(SPM.Vbeta, find(m));
            cd(cdir);
            X = SPM.xX.xKXs.X;

            % separate RU betas and regressors from the rest
            which_reg = contains(names, regressor);
            B_noreg = B(~which_reg, :);
            B_reg = B(which_reg, :);
            B_reg = repelem(B_reg, nTRs, 1); % we're need one for each TR b/c we're doing element-wise divison by b_RU
            X_noreg = X(:, ~which_reg);
            X_reg = X(:, which_reg);

            fprintf('  c = %s, s = %d\n', mask, s);

            data(s).B_noreg{c} = B_noreg;
            data(s).B_reg{c} = B_reg;
            data(s).X_noreg{c} = X_noreg;
            data(s).X_reg{c} = X_reg;
        else
            assert(false);

        end
    end
end

% extract activations for each cluster
%
V_all = [];
for s = 1:length(data)
    modeldir = fullfile(EXPT.modeldir,['model',num2str(glmodel)],['subj',num2str(s)]);
    load(fullfile(modeldir,'SPM.mat'));

    clear act;
    for c = 1:length(masks)
        mask = masks{c};
        [~, masknames{c}, ~] = fileparts(mask);

        act{c} = ccnl_get_activations(EXPT, glmodel, mask, s);
        data(s).all_act{c} = act{c};

    end

    data(s).act = nan(length(data(s).run), length(masks));
    [V, RU, TU] = get_latents(data, s, logical(ones(length(data(s).run), 1)), 'left');
    data(s).RU = RU;
    data(s).TU = TU;
    V_all = [V_all; V(~data(s).timeout)];

    for c = 1:length(masks)
        if normalize == 2
            act{c} = (act{c} - data(s).X_noreg{c} * data(s).B_noreg{c}) ./ data(s).B_reg{c};
        elseif normalize == 3
            act{c} = spm_filter(SPM.xX.K,SPM.xX.W*act{c});
            act{c} = (act{c} - data(s).X_noreg{c} * data(s).B_noreg{c}) ./ data(s).B_reg{c};
        elseif normalize == 4
            % ridge regression -- regulalize by lambda
            % x_RU = (activation - sum of x_i * b_i, for i != RU) * b_RU / (b_RU^2 + lambda)
            % strictly speaking we should call it decRU instead of act but whatevs
            %
            act{c} = spm_filter(SPM.xX.K,SPM.xX.W*act{c});
            act{c} = (act{c} - data(s).X_noreg{c} * data(s).B_noreg{c}) .* data(s).B_reg{c} ./ (data(s).B_reg{c}.^2 + lambda);
        end

        % not all runs were used in the GLMs
        which_act = data(s).trial_onset_act_idx(~data(s).bad_runs); % trial onset activations
        act{c} = act{c}(which_act,:); % only consider 1 activation for each trial

        if normalize == 1
            act{c} = (act{c} - data(s).b0{c}(~data(s).bad_runs)) ./ data(s).b{c}(~data(s).bad_runs);
        end

        data(s).act(~data(s).bad_runs,c) = mean(act{c}, 2);

        % adjust for fact that the regressor was |RU|
        if glmodel == 21 && strcmp(regressor, 'RU')
            data(s).act(:,c) = data(s).act(:,c) .* (RU >= 0) + (-data(s).act(:,c)) .* (RU < 0);
        end
    end
end

save(filename, '-v7.3');


% fit behavioral GLM with activations
%
ps = [];
for c = 1:numel(masks)
    act = [];
    mse = [];
    bad_runs = logical([]);
    for s = 1:length(data)
        act = [act; data(s).act(~data(s).timeout, c)]; % even though neural GLMs includes timeouts, we exclude them for fitting the behavioral GLMs
        bad_runs = [bad_runs; data(s).bad_runs(~data(s).timeout)]; % bad runs are also out (their activations are NaNs)

        which = ~data(s).bad_runs & ~data(s).timeout;
        switch regressor % TODO act is still whitened & filtered => MSE might be wrong
            case 'RU'
                mse(s) = immse(data(s).RU(which), data(s).act(which, c));
            case 'TU'
                mse(s) = immse(data(s).TU(which), data(s).act(which, c));
        end
    end
    assert(all(isnan(act(bad_runs))));
    assert(all(~isnan(act(~bad_runs))));

    if standardize
        tbl = data2table(data,1,1); % exclude timeouts for fitting
    else
        tbl = data2table(data,0,1); % exclude timeouts for fitting
    end

    switch regressor
        case 'RU'
            decRU = act;
            if standardize
                decRU(~bad_runs) = zscore(decRU(~bad_runs));
            end
            tbl = [tbl table(decRU)];

            % orthogonalized version
            tmp = spm_orth([tbl.RU(~bad_runs), decRU(~bad_runs)]);
            decRU_orth = decRU;
            decRU_orth(~bad_runs) = tmp(:,2);
            if standardize
                decRU_orth(~bad_runs) = zscore(decRU_orth(~bad_runs));
            end
            tbl = [tbl table(decRU_orth)];
        case 'TU'
            VdecTU = V_all ./ act;
            if standardize
                VdecTU(~bad_runs) = zscore(VdecTU(~bad_runs));
            end
            tbl = [tbl table(VdecTU)];

            % orthogonalized version
            tmp = spm_orth([tbl.VTU(~bad_runs), VdecTU(~bad_runs)]);
            VdecTU_orth = VdecTU;
            VdecTU_orth(~bad_runs) = tmp(:,2);
            if standardize
                VdecTU_orth(~bad_runs) = zscore(VdecTU_orth(~bad_runs));
            end
            tbl = [tbl table(VdecTU_orth)];
        otherwise
            assert(false);
    end

    % glm with both RU and actRU
    results_both{c} = fitglme(tbl,formula_both,'Distribution','Binomial','Link','Probit','FitMethod','Laplace', 'CovariancePattern','diagonal', 'Exclude',bad_runs);
    [w, names, stats] = fixedEffects(results_both{c});
    ps(c,:) = stats.pValue';
    results_both{c}
    stats.pValue
    w

    % glm with RU only
    % do model comparison
    results_orig{c} = fitglme(tbl,formula_orig,'Distribution','Binomial','Link','Probit','FitMethod','Laplace', 'CovariancePattern','diagonal', 'Exclude',bad_runs);
    comp{c} = compare(results_orig{c}, results_both{c}); % order is important -- see docs
    comp{c}
    p_comp(c,:) = comp{c}.pValue(2);
    BIC(c,:) = comp{c}.BIC';

    % glm with actRU only
    % do second model comparison
    results_dec{c} = fitglme(tbl,formula_dec,'Distribution','Binomial','Link','Probit','FitMethod','Laplace', 'CovariancePattern','diagonal', 'Exclude',bad_runs);
    comp2{c} = compare(results_dec{c}, results_both{c}); % order is important -- see docs
    comp2{c}
    p_comp2(c,:) = comp2{c}.pValue(2);
    BIC2(c,:) = comp2{c}.BIC';


    % sanity check -- activations should correlate with regressor
    switch regressor
        case 'RU'
            RU = table2array(tbl(:,'RU'));
            [r,p] = corr(RU(~bad_runs), act(~bad_runs));
        case 'TU'
            TU = table2array(tbl(:,'TU'));
            [r,p] = corr(TU(~bad_runs), act(~bad_runs));
    end


    pears_rs(c,:) = r;
    pears_ps(c,:) = p;

    % correlate MSE with behavioral weights across subjects
    % => see if better decodeability is associated with more reliance on regressor in decision
    %
    if standardize
        load results_glme_fig3.mat;
    else
        load results_glme_fig3_nozscore.mat;
    end
    w = getEffects(results_VTURU, false);
    switch regressor
        case 'RU'
            [r, p] = corr(abs(w(:,2)), mse');
        case 'TU'
            [r, p] = corr(abs(w(:,3)), mse');
        otherwise
            assert(false);
    end
    disp('mse to w');
    r
    p
    p_ax(c,:) = p;
    r_ax(c,:) = r;
end


save(filename, '-v7.3');


p_uncorr = ps(:,4);
p_corr = 1 - (1 - p_uncorr) .^ numel(p_uncorr);
BIC_orig = BIC(:,1);
BIC_both = BIC(:,2);
BIC_dec = BIC2(:,1);
table(region, p_uncorr, p_corr, pears_rs, pears_ps, BIC_orig, BIC_both, p_comp, BIC_dec, p_comp2, p_ax, r_ax)


--------------------- END FILE univariate_decoder.m-------------------
       datadir: '/ncf/gershman/Lab/Exploration/subjects/180725_UEP_001/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180727_UEP_002/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180727_UEP_003/preproc'
    structural: 'struct.nii'
    functional: {1×6 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180730_UEP_004/preproc'
    structural: 'struct.nii'
    functional: {1×6 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180730_UEP_005/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180801_UEP_006/preproc'
    structural: 'struct.nii'
    functional: {1×7 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180802_UEP_007/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180803_UEP_008/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180803_UEP_009/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP010/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_011/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_012/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_013/preproc'
    structural: 'struct.nii'
    functional: {1×7 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_014/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180804_UEP_015/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_016/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_017/preproc'
    structural: 'struct.nii'
    functional: {1×7 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_018_2/preproc'
    structural: 'struct.nii'
    functional: {1×7 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_019/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_020/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180805_UEP_021/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180806_UEP_022/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180806_UEP_023/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180807_UEP_024/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180807_UEP_025/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180807_UEP_026/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180808_UEP_027/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180808_UEP_028/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180808_UEP_029/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180809_UEP_030/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

       datadir: '/ncf/gershman/Lab/Exploration/subjects/180809_UEP_031/preproc'
    structural: 'struct.nii'
    functional: {1×8 cell}

univariate_decoder_glm21_TU_TU_-_trial_norm=4_orth=1_lambda=1.000000_standardize=1_mixed=0.mat
bspm_extract_clusters(/ncf/gershman/Lab/Exploration/glmOutput/model21/con6/spmT_0001.nii, 0.001000, +, 0.050000, 20, 1, 30, /ncf/gershman/Lab/scripts/ccnl-fmri-2018/atlases, AAL2)
  Columns 1 through 6

    'Positive'    'Parietal_Inf_R'         [2042]    [7.5078]    [ 38]    [-46]
            []    'Parietal_Inf_L'         [1521]    [7.2982]    [-46]    [-40]
            []    'Location not in ...'    [ 468]    [6.2314]    [ 22]    [ -2]
            []    'Precentral_L'           [ 282]    [5.7913]    [-42]    [  2]
            []    'Precentral_R'           [ 258]    [4.8413]    [ 46]    [  8]
            []    'Insula_L'               [ 268]    [4.8153]    [-30]    [ 22]

  Column 7

    [44]
    [48]
    [52]
    [28]
    [30]
    [ 2]

  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 1
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 2
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 3
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 4
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 5
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 6
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 7
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 8
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 9
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 10
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 11
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 12
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 13
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 14
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 15
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 16
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 17
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 18
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 19
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 20
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 21
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 22
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 23
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 24
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 25
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 26
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 27
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 28
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 29
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 30
  c = sphere_glm21_TU_-_trial_38_-46_44_r=10mm.nii, s = 31
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 1
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 2
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 3
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 4
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 5
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 6
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 7
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 8
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 9
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 10
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 11
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 12
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 13
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 14
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 15
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 16
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 17
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 18
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 19
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 20
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 21
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 22
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 23
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 24
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 25
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 26
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 27
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 28
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 29
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 30
  c = sphere_glm21_TU_-_trial_-46_-40_48_r=10mm.nii, s = 31
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 1
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 2
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 3
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 4
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 5
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 6
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 7
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 8
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 9
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 10
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 11
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 12
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 13
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 14
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 15
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 16
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 17
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 18
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 19
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 20
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 21
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 22
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 23
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 24
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 25
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 26
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 27
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 28
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 29
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 30
  c = sphere_glm21_TU_-_trial_22_-2_52_r=10mm.nii, s = 31
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 1
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 2
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 3
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 4
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 5
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 6
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 7
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 8
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 9
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 10
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 11
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 12
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 13
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 14
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 15
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 16
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 17
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 18
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 19
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 20
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 21
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 22
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 23
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 24
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 25
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 26
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 27
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 28
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 29
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 30
  c = sphere_glm21_TU_-_trial_-42_2_28_r=10mm.nii, s = 31
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 1
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 2
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 3
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 4
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 5
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 6
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 7
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 8
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 9
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 10
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 11
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 12
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 13
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 14
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 15
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 16
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 17
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 18
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 19
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 20
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 21
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 22
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 23
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 24
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 25
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 26
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 27
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 28
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 29
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 30
  c = sphere_glm21_TU_-_trial_46_8_30_r=10mm.nii, s = 31
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 1
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 2
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 3
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 4
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 5
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 6
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 7
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 8
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 9
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 10
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 11
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 12
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 13
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 14
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 15
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 16
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 17
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 18
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 19
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 20
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 21
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 22
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 23
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 24
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 25
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 26
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 27
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 28
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 29
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 30
  c = sphere_glm21_TU_-_trial_-30_22_2_r=10mm.nii, s = 31
mask
Computed activations for subject 1
mask
Computed activations for subject 1
mask
Computed activations for subject 1
mask
Computed activations for subject 1
mask
Computed activations for subject 1
mask
Computed activations for subject 1
mask
Computed activations for subject 2
mask
Computed activations for subject 2
mask
Computed activations for subject 2
mask
Computed activations for subject 2
mask
Computed activations for subject 2
mask
Computed activations for subject 2
mask
Computed activations for subject 3
mask
Computed activations for subject 3
mask
Computed activations for subject 3
mask
Computed activations for subject 3
mask
Computed activations for subject 3
mask
Computed activations for subject 3
mask
Computed activations for subject 4
mask
Computed activations for subject 4
mask
Computed activations for subject 4
mask
Computed activations for subject 4
mask
Computed activations for subject 4
mask
Computed activations for subject 4
mask
Computed activations for subject 5
mask
Computed activations for subject 5
mask
Computed activations for subject 5
mask
Computed activations for subject 5
mask
Computed activations for subject 5
mask
Computed activations for subject 5
mask
Computed activations for subject 6
mask
Computed activations for subject 6
mask
Computed activations for subject 6
mask
Computed activations for subject 6
mask
Computed activations for subject 6
mask
Computed activations for subject 6
mask
Computed activations for subject 7
mask
Computed activations for subject 7
mask
Computed activations for subject 7
mask
Computed activations for subject 7
mask
Computed activations for subject 7
mask
Computed activations for subject 7
mask
Computed activations for subject 8
mask
Computed activations for subject 8
mask
Computed activations for subject 8
mask
Computed activations for subject 8
mask
Computed activations for subject 8
mask
Computed activations for subject 8
mask
Computed activations for subject 9
mask
Computed activations for subject 9
mask
Computed activations for subject 9
mask
Computed activations for subject 9
mask
Computed activations for subject 9
mask
Computed activations for subject 9
mask
Computed activations for subject 10
mask
Computed activations for subject 10
mask
Computed activations for subject 10
mask
Computed activations for subject 10
mask
Computed activations for subject 10
mask
Computed activations for subject 10
mask
Computed activations for subject 11
mask
Computed activations for subject 11
mask
Computed activations for subject 11
mask
Computed activations for subject 11
mask
Computed activations for subject 11
mask
Computed activations for subject 11
mask
Computed activations for subject 12
mask
Computed activations for subject 12
mask
Computed activations for subject 12
mask
Computed activations for subject 12
mask
Computed activations for subject 12
mask
Computed activations for subject 12
mask
Computed activations for subject 13
mask
Computed activations for subject 13
mask
Computed activations for subject 13
mask
Computed activations for subject 13
mask
Computed activations for subject 13
mask
Computed activations for subject 13
mask
Computed activations for subject 14
mask
Computed activations for subject 14
mask
Computed activations for subject 14
mask
Computed activations for subject 14
mask
Computed activations for subject 14
mask
Computed activations for subject 14
mask
Computed activations for subject 15
mask
Computed activations for subject 15
mask
Computed activations for subject 15
mask
Computed activations for subject 15
mask
Computed activations for subject 15
mask
Computed activations for subject 15
mask
Computed activations for subject 16
mask
Computed activations for subject 16
mask
Computed activations for subject 16
mask
Computed activations for subject 16
mask
Computed activations for subject 16
mask
Computed activations for subject 16
mask
Computed activations for subject 17
mask
Computed activations for subject 17
mask
Computed activations for subject 17
mask
Computed activations for subject 17
mask
Computed activations for subject 17
mask
Computed activations for subject 17
mask
Computed activations for subject 18
mask
Computed activations for subject 18
mask
Computed activations for subject 18
mask
Computed activations for subject 18
mask
Computed activations for subject 18
mask
Computed activations for subject 18
mask
Computed activations for subject 19
mask
Computed activations for subject 19
mask
Computed activations for subject 19
mask
Computed activations for subject 19
mask
Computed activations for subject 19
mask
Computed activations for subject 19
mask
Computed activations for subject 20
mask
Computed activations for subject 20
mask
Computed activations for subject 20
mask
Computed activations for subject 20
mask
Computed activations for subject 20
mask
Computed activations for subject 20
mask
Computed activations for subject 21
mask
Computed activations for subject 21
mask
Computed activations for subject 21
mask
Computed activations for subject 21
mask
Computed activations for subject 21
mask
Computed activations for subject 21
mask
Computed activations for subject 22
mask
Computed activations for subject 22
mask
Computed activations for subject 22
mask
Computed activations for subject 22
mask
Computed activations for subject 22
mask
Computed activations for subject 22
mask
Computed activations for subject 23
mask
Computed activations for subject 23
mask
Computed activations for subject 23
mask
Computed activations for subject 23
mask
Computed activations for subject 23
mask
Computed activations for subject 23
mask
Computed activations for subject 24
mask
Computed activations for subject 24
mask
Computed activations for subject 24
mask
Computed activations for subject 24
mask
Computed activations for subject 24
mask
Computed activations for subject 24
mask
Computed activations for subject 25
mask
Computed activations for subject 25
mask
Computed activations for subject 25
mask
Computed activations for subject 25
mask
Computed activations for subject 25
mask
Computed activations for subject 25
mask
Computed activations for subject 26
mask
Computed activations for subject 26
mask
Computed activations for subject 26
mask
Computed activations for subject 26
mask
Computed activations for subject 26
mask
Computed activations for subject 26
mask
Computed activations for subject 27
mask
Computed activations for subject 27
mask
Computed activations for subject 27
mask
Computed activations for subject 27
mask
Computed activations for subject 27
mask
Computed activations for subject 27
mask
Computed activations for subject 28
mask
Computed activations for subject 28
mask
Computed activations for subject 28
mask
Computed activations for subject 28
mask
Computed activations for subject 28
mask
Computed activations for subject 28
mask
Computed activations for subject 29
mask
Computed activations for subject 29
mask
Computed activations for subject 29
mask
Computed activations for subject 29
mask
Computed activations for subject 29
mask
Computed activations for subject 29
mask
Computed activations for subject 30
mask
Computed activations for subject 30
mask
Computed activations for subject 30
mask
Computed activations for subject 30
mask
Computed activations for subject 30
mask
Computed activations for subject 30
mask
Computed activations for subject 31
mask
Computed activations for subject 31
mask
Computed activations for subject 31
mask
Computed activations for subject 31
mask
Computed activations for subject 31
mask
Computed activations for subject 31
[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 370)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + VdecTU_orth

Model fit statistics:
    AIC     BIC       LogLikelihood    Deviance
    7502    7530.6    -3747            7494    

Fixed effects coefficients (95% CIs):
    Name                 Estimate     SE          tStat      DF      pValue    
    'RU'                   0.34911    0.017682     19.745    9475             0
    'VTU'                  0.22084     0.03828     5.7691    9475    8.2175e-09
    'V'                      1.484    0.030883     48.052    9475             0
    'VdecTU_orth'        -0.037387    0.021245    -1.7598    9475       0.07847


    Lower       Upper    
     0.31445      0.38377
      0.1458      0.29588
      1.4235       1.5445
    -0.07903    0.0042572

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

         0
    0.0000
         0
    0.0785


w =

    0.3491
    0.2208
    1.4840
   -0.0374

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 379)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF    pValue 
    GLME       3     7502.6      7524    -3748.3                                
    ALTGLME    4       7502    7530.6      -3747    2.5526    1          0.11011

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 387)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7536.6    7558.1    -3765.3                     
    ALTGLME    4       7502    7530.6      -3747    36.596    1      


    pValue    
              
    1.4533e-09

mse to w

r =

   -0.1481


p =

    0.4265

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 370)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + VdecTU_orth

Model fit statistics:
    AIC       BIC       LogLikelihood    Deviance
    7504.5    7533.2    -3748.3          7496.5  

Fixed effects coefficients (95% CIs):
    Name                 Estimate     SE          tStat      DF      pValue    
    'RU'                   0.34836    0.017669     19.715    9475             0
    'VTU'                     0.22    0.038284     5.7466    9475    9.3863e-09
    'V'                     1.4822    0.030846     48.052    9475             0
    'VdecTU_orth'        0.0029622    0.022481    0.13176    9475       0.89517


    Lower        Upper  
      0.31372    0.38299
      0.14496    0.29505
       1.4218     1.5427
    -0.041106    0.04703

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

         0
    0.0000
         0
    0.8952


w =

    0.3484
    0.2200
    1.4822
    0.0030

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 379)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat      deltaDF
    GLME       3     7502.6      7524    -3748.3                       
    ALTGLME    4     7504.5    7533.2    -3748.3    0.017686    1      


    pValue
          
    0.8942

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 387)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7539.5      7561    -3766.8                     
    ALTGLME    4     7504.5    7533.2    -3748.3    37.015    1      


    pValue   
             
    1.172e-09

mse to w

r =

    0.1099


p =

    0.5563

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 370)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + VdecTU_orth

Model fit statistics:
    AIC       BIC     LogLikelihood    Deviance
    7495.4    7524    -3743.7          7487.4  

Fixed effects coefficients (95% CIs):
    Name                 Estimate    SE          tStat     DF      pValue    
    'RU'                  0.35031     0.01769    19.803    9475             0
    'VTU'                  0.2185    0.038314     5.703    9475    1.2127e-08
    'V'                    1.4899    0.031024    48.022    9475             0
    'VdecTU_orth'        0.062748    0.019049    3.2941    9475    0.00099111


    Lower       Upper  
     0.31563    0.38498
      0.1434     0.2936
       1.429     1.5507
    0.025408    0.10009

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

   1.0e-03 *

         0
    0.0000
         0
    0.9911


w =

    0.3503
    0.2185
    1.4899
    0.0627

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 379)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC     LogLik     LRStat    deltaDF    pValue   
    GLME       3     7502.6    7524    -3748.3                                  
    ALTGLME    4     7495.4    7524    -3743.7    9.1416    1          0.0024987

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 387)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7530.8    7552.3    -3762.4                     
    ALTGLME    4     7495.4      7524    -3743.7    37.392    1      


    pValue    
              
    9.6613e-10

mse to w

r =

   -0.0831


p =

    0.6568

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 370)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + VdecTU_orth

Model fit statistics:
    AIC       BIC       LogLikelihood    Deviance
    7504.2    7532.8    -3748.1          7496.2  

Fixed effects coefficients (95% CIs):
    Name                 Estimate    SE          tStat      DF      pValue    
    'RU'                  0.34834    0.017662     19.723    9475             0
    'VTU'                 0.21998    0.038281     5.7464    9475    9.3968e-09
    'V'                    1.4824    0.030833     48.077    9475             0
    'VdecTU_orth'        0.015892    0.023229    0.68413    9475       0.49391


    Lower        Upper   
      0.31372     0.38296
      0.14494     0.29502
        1.422      1.5428
    -0.029642    0.061425

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

         0
    0.0000
         0
    0.4939


w =

    0.3483
    0.2200
    1.4824
    0.0159

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 379)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat     deltaDF
    GLME       3     7502.6      7524    -3748.3                      
    ALTGLME    4     7504.2    7532.8    -3748.1    0.39332    1      


    pValue 
           
    0.53056

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 387)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7539.1    7560.6    -3766.6                     
    ALTGLME    4     7504.2    7532.8    -3748.1    36.976    1      


    pValue    
              
    1.1962e-09

mse to w

r =

    0.0288


p =

    0.8779

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 370)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + VdecTU_orth

Model fit statistics:
    AIC       BIC       LogLikelihood    Deviance
    7485.5    7514.1    -3738.8          7477.5  

Fixed effects coefficients (95% CIs):
    Name                 Estimate    SE          tStat     DF      pValue    
    'RU'                   0.3493    0.017692    19.744    9475             0
    'VTU'                 0.21734    0.038517    5.6427    9475    1.7222e-08
    'V'                     1.499    0.031222    48.011    9475             0
    'VdecTU_orth'        0.074832    0.015925     4.699    9475    2.6506e-06


    Lower       Upper  
     0.31462    0.38398
     0.14184    0.29284
      1.4378     1.5602
    0.043616    0.10605

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

   1.0e-05 *

         0
    0.0017
         0
    0.2651


w =

    0.3493
    0.2173
    1.4990
    0.0748

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 379)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7502.6      7524    -3748.3                     
    ALTGLME    4     7485.5    7514.1    -3738.8    19.035    1      


    pValue    
              
    1.2834e-05

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 387)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3       7520    7541.5      -3757                     
    ALTGLME    4     7485.5    7514.1    -3738.8    36.49     1      


    pValue    
              
    1.5345e-09

mse to w

r =

    0.0779


p =

    0.6769

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 370)] 

ans = 


Generalized linear mixed-effects model fit by ML

Model information:
    Number of observations            9479
    Fixed effects coefficients           4
    Random effects coefficients          0
    Covariance parameters                0
    Distribution                    Binomial
    Link                            Probit
    FitMethod                       Laplace

Formula:
    C ~ RU + VTU + V + VdecTU_orth

Model fit statistics:
    AIC       BIC       LogLikelihood    Deviance
    7486.7    7515.3    -3739.3          7478.7  

Fixed effects coefficients (95% CIs):
    Name                 Estimate     SE          tStat      DF      pValue    
    'RU'                   0.35209    0.017727     19.861    9475             0
    'VTU'                  0.21756    0.038407     5.6647    9475    1.5155e-08
    'V'                     1.4876    0.030986     48.008    9475             0
    'VdecTU_orth'        -0.075916    0.028673    -2.6476    9475     0.0081198


    Lower       Upper   
     0.31734     0.38684
     0.14228     0.29285
      1.4268      1.5483
    -0.13212    -0.01971

Random effects covariance parameters:
Group: Error
    Name                      Estimate
    'sqrt(Dispersion)'        1       


ans =

         0
    0.0000
         0
    0.0081


w =

    0.3521
    0.2176
    1.4876
   -0.0759

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 379)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7502.6      7524    -3748.3                     
    ALTGLME    4     7486.7    7515.3    -3739.3    17.898    1      


    pValue    
              
    2.3312e-05

[Warning: Ignoring 'CovariancePattern' parameter since the model has no random
effects.] 
[> In classreg.regr.LinearLikeMixedModel/validateCovariancePattern (line 1615)
  In GeneralizedLinearMixedModel.fit (line 2392)
  In fitglme (line 389)
  In univariate_decoder (line 387)] 

ans = 


    THEORETICAL LIKELIHOOD RATIO TEST

    Model      DF    AIC       BIC       LogLik     LRStat    deltaDF
    GLME       3     7521.2    7542.7    -3757.6                     
    ALTGLME    4     7486.7    7515.3    -3739.3    36.564    1      


    pValue    
              
    1.4774e-09

mse to w

r =

    0.1474


p =

    0.4288


ans =

  6×12 table

            region              p_uncorr       p_corr       pears_rs     pears_ps     BIC_orig    BIC_both      p_comp      BIC_dec     p_comp2       p_ax        r_ax   
    _______________________    __________    __________    __________    _________    ________    ________    __________    _______    __________    _______    _________

    'Parietal_Inf_R'              0.07847       0.38757     -0.022855     0.026071    7524        7530.6         0.11011    7558.1     1.4533e-09    0.42653     -0.14811
    'Parietal_Inf_L'              0.89517             1    -0.0069728      0.49727    7524        7533.2          0.8942      7561      1.172e-09    0.55625      0.10988
    'Location not in atlas'    0.00099111      0.005932     -0.023954     0.019691    7524          7524       0.0024987    7552.3     9.6613e-10    0.65677    -0.083088
    'Precentral_L'                0.49391        0.9832     -0.019727      0.05479    7524        7532.8         0.53056    7560.6     1.1962e-09     0.8779     0.028771
    'Precentral_R'             2.6506e-06    1.5904e-05      -0.02172     0.034464    7524        7514.1      1.2834e-05    7541.5     1.5345e-09    0.67691     0.077928
    'Insula_L'                  0.0081198       0.04774     -0.051391    5.555e-07    7524        7515.3      2.3312e-05    7542.7     1.4774e-09    0.42876       0.1474

